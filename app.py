from flask import Flask, render_template
from flask_sqlalchemy import SQLAlchemy
from config import Config
from models import db, User, Product
from routes.auth import auth_bp
from routes.products import products_bp
from routes.favorites import favorites_bp
from routes.cart import cart_bp
from jwt_utils import create_jwt_token
import atexit
import os

app = Flask(__name__)
app.config.from_object(Config)
db.init_app(app)

# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è blueprint'–æ–≤
app.register_blueprint(auth_bp)
app.register_blueprint(products_bp, url_prefix='/api')
app.register_blueprint(favorites_bp, url_prefix='/api')
app.register_blueprint(cart_bp, url_prefix='/api')

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î ===
def init_database():
    with app.app_context():
        db.create_all()
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã")

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –≤ development —Ä–µ–∂–∏–º–µ
        if os.environ.get('FLASK_ENV') == 'development':
            # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if not User.query.filter_by(username='admin').first():
                from werkzeug.security import generate_password_hash
                admin = User(
                    username='admin',
                    email='admin@example.com',
                    password_hash=generate_password_hash('admin'),
                    is_active=True
                )
                db.session.add(admin)
                db.session.commit()
                print("üÜï –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'admin' –¥–æ–±–∞–≤–ª–µ–Ω")

            # –¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
            if Product.query.count() == 0:
                products = [
                    Product(name="–ù–æ—É—Ç–±—É–∫", price=59990.00, description="–ú–æ—â–Ω—ã–π –Ω–æ—É—Ç–±—É–∫", image_url="https://via.placeholder.com/150?text=Notebook"),
                    Product(name="–°–º–∞—Ä—Ç—Ñ–æ–Ω", price=29990.00, description="–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω", image_url="https://via.placeholder.com/150?text=Phone"),
                    Product(name="–ù–∞—É—à–Ω–∏–∫–∏", price=4990.00, description="–° —à—É–º–æ–ø–æ–¥–∞–≤–ª–µ–Ω–∏–µ–º", image_url="https://via.placeholder.com/150?text=Headphones"),
                ]
                db.session.bulk_save_objects(products)
                db.session.commit()
                print("üÜï –î–æ–±–∞–≤–ª–µ–Ω–æ 3 —Ç–æ–≤–∞—Ä–∞")
        else:
            print("‚û°Ô∏è –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã (production —Ä–µ–∂–∏–º)")

init_database()
atexit.register(lambda: print("üõë –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"))

# === –ì–ª–∞–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ===
@app.route('/')
def index():
    return render_template('index.html')

@app.route('/products')
def products():
    return render_template('products.html')

@app.route('/cart')
def cart():
    return render_template('cart.html')

@app.route('/favorites')
def favorites():
    return render_template('favorites.html')

if __name__ == '__main__':
    app.run(debug=False)